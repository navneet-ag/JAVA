package com.adobe.prj.service;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.adobe.prj.dao.CustomerDao;
import com.adobe.prj.dao.OrderDao;
import com.adobe.prj.dao.ProductDao;
import com.adobe.prj.entity.Customer;
import com.adobe.prj.entity.Item;
import com.adobe.prj.entity.Order;
import com.adobe.prj.entity.Product;
import com.adobe.prj.entity.ReportDTO;

@Service
public class OrderService {
	
	@Autowired
	private ProductDao productDao; // wire class generated by Spring Data JPA
	
	@Autowired
	private CustomerDao customerDao; // wire class generated by Spring Data JPA
	
	@Autowired
	private OrderDao orderDao;
	
	public List<Order> getOrders() {
		return orderDao.findAll();
	}
	
	@Transactional
	public Order placeOrder(Order order) {
		double total = 0.0;
		List<Item> items = order.getItems();
		for(Item item : items) {
			Product p = productDao.findById(item.getProduct().getId()).get();
			item.setAmount(p.getPrice() * item.getQty());
			total += item.getAmount();
			p.setQuantity(p.getQuantity() - item.getQty()); // Dirty checking ==> update
		}
		order.setTotal(total);
		return orderDao.save(order); // saves orders and items ==> Cascade
	}
	
	public List<Product> getProducts() {
		return productDao.findAll();
	}
	
	public Product addProduct(Product p) {
		return productDao.save(p);
	}
	
	public Product getProductById(int id) {
		return productDao.findById(id).get();
	}
	
	public Customer addCustomer(Customer c) {
		return customerDao.save(c);
	}
	
	public List<Product> productsByRange(double low, double high) {
		return productDao.fetchByRange(low, high);
	}
	
	@Transactional
	public void updateProductPrice(double price, int id) {
		productDao.updatePrice(price, id);
	}
	
	public List<ReportDTO> getOrderReport() {
		return orderDao.getReport();
	}
}
